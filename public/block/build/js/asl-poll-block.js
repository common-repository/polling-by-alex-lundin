(()=>{"use strict";var e={n:t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},d:(t,n)=>{for(var l in n)e.o(n,l)&&!e.o(t,l)&&Object.defineProperty(t,l,{enumerable:!0,get:n[l]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};const t=window.wp.blocks,n=window.wp.i18n,l=window.wp.element,a=window.wp.blockEditor,r=window.wp.apiFetch;var o=e.n(r);const i=window.wp.components;function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var l,a,r=[],_n=!0,o=!1;try{for(n=n.call(e);!(_n=(l=n.next()).done)&&(r.push(l.value),!t||r.length!==t);_n=!0);}catch(e){o=!0,a=e}finally{try{_n||null==n.return||n.return()}finally{if(o)throw a}}return r}}(e,t)||s(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,l=new Array(t);n<t;n++)l[n]=e[n];return l}(0,t.registerBlockType)("asl/asl-polls",{title:(0,n.__)("WP Polls","asl-polling"),category:"text",icon:"format-status",attributes:{pollId:{type:"string"},displayHead:{type:"boolean",default:!1},displayDescription:{type:"boolean",default:!1},skin:{type:"string",default:"columns"}},edit:function(e){var t=e.attributes,r=e.setAttributes,u=t.pollId,d=t.displayHead,p=t.displayDescription,f=t.skin,y=c((0,l.useState)(null),2),m=y[0],g=y[1],h=c((0,l.useState)(f),2),b=(h[0],h[1],[{label:(0,n.__)("No Polls found. Please add a poll first","asl-polling")}]);if((0,l.useEffect)((function(){o()({path:"/asl-polls/v1/polls"}).then((function(e){0!==e.length?r({pollId:e[0].id}):r({pollId:void 0}),g(e)}))}),[]),m){b=[];var _,v=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=s(e))){n&&(e=n);var l=0,a=function(){};return{s:a,n:function(){return l>=e.length?{done:!0}:{done:!1,value:e[l++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,i=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){i=!0,r=e},f:function(){try{o||null==n.return||n.return()}finally{if(i)throw r}}}}(m);try{for(v.s();!(_=v.n()).done;){var w=_.value;b.push({label:w.name,value:w.id})}}catch(e){v.e(e)}finally{v.f()}0===m.length&&b.push({label:(0,n.__)("No Polls found. Please add a poll first","asl-polling")})}var E=(0,a.useBlockProps)({className:"asl-polls-block"});return React.createElement("div",E,React.createElement(i.Card,null,React.createElement(i.CardHeader,{isShady:!0,size:"large"},React.createElement(i.FlexBlock,null,React.createElement(i.SelectControl,{label:(0,n.__)("Select a poll","asl-polling"),value:u,options:b,onChange:function(e){return r({pollId:e})}}))),React.createElement(i.CardBody,{isShady:!0},React.createElement(i.Flex,null,React.createElement(i.ToggleControl,{label:(0,n.__)("Show Heading","asl-polling"),checked:d,onChange:function(e){r({displayHead:e})}}),React.createElement(i.ToggleControl,{label:(0,n.__)("Show Description","asl-polling"),checked:p,onChange:function(e){r({displayDescription:e})}})),React.createElement(i.__experimentalSpacer,{marginY:5}),React.createElement(i.Flex,{justify:"start",gap:5},React.createElement(i.__experimentalText,null,(0,n.__)("Choose a design:","asl-polling")),React.createElement(i.__experimentalRadioGroup,{label:(0,n.__)("Choose a design","asl-polling"),onChange:function(e){return r({skin:e})},checked:f},React.createElement(i.__experimentalRadio,{value:"columns"},(0,n.__)("Column (default)","asl-polling")),React.createElement(i.__experimentalRadio,{value:"table"},(0,n.__)("Table","asl-polling")))))))}})})();